#!/bin/bash
#
# Backup postgres database in the style of mylvmbackup
#
# Copyright (C) 2016 Brightbox Systems
# Author: Neil Wilson
#
set -eu -o pipefail

mountdir=/mnt/pg_backup
volgroup_name=pg
source_name=data
target_name=${source_name}_backup
source_partition=/dev/${volgroup_name}/${source_name}
target_partition=/dev/${volgroup_name}/${target_name}

program_name=$(basename $0)


cleanup() {
  echo "Cleaning up"
  set +e
  umount ${mountdir}
  lvremove -f ${target_partition}
  rmdir ${mountdir}
  exit ${1:-1}
}

trap "cleanup;" ERR SIGINT SIGQUIT SIGTERM

fail() {
  echo "${program_name}: $@" >&2
  exit 1
}

[ "$#" -eq 3 ] || fail "auth_token segment_size target_uri"

auth_token=$1
segment_size=$2
target_uri=$3

#Checkpoint
sudo -u postgres psql -c 'checkpoint;'

#Snapshot
lvcreate --snapshot \
   --name "${target_name}" \
   "${source_partition}"

#Mount snapshot
echo "Mounting ${target_partition} at ${mountdir}"
mkdir -p "${mountdir}"
mount -o rw,nouuid "${target_partition}" "${mountdir}"

#Backup snapshot
echo "Backing up database to ${target_uri}"
tar --create \
   --one-file-system \
   --sparse \
   -Ilz4 \
   --directory "${mountdir}" \
   --exclude-caches-under \
   . |
   segment_upload --auth-token "${auth_token}" \
		  --segment-size "${segment_size}"B \
		  "${target_uri}"

#Clear up
trap '' SIGINT SIGQUIT SIGTERM
trap - ERR
cleanup 0
