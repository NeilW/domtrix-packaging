#!/bin/bash
#
# Backup postgres database in the style of mylvmbackup
#
# Copyright (C) 2016 Brightbox Systems
# Author: Neil Wilson
#
set -e

mountdir=/mnt/pg_backup
volgroup_name=pg
source_name=data
target_name=${source_name}_backup
source_partition=/dev/${volgroup_name}/${source_name}
target_partition=/dev/${volgroup_name}/${target_name}

program_name=$(basename $0)

cleanup() {
  echo "Cleaning up"
  set +e
  trap '' SIGINT SIGQUIT SIGTERM
  trap - ERR
  umount ${mountdir}
  lvremove -f ${target_partition}
  rmdir ${mountdir}
}

trap "cleanup; fail 'stopping due to command failure'" ERR
trap "cleanup; fail 'stopping due to signal'" SIGINT SIGQUIT SIGTERM

fail() {
  echo "${program_name}: $@" >&2
  exit 1
}

checkpoint() {
  sudo -u postgres psql -c 'checkpoint;'
}

snapshot() {
  lvcreate --snapshot \
           --name "${target_name}" \
           "${source_partition}"
}

mount_snapshot() {
  mkdir -p "${mountdir}"
  mount -o rw,nouuid "${target_partition}" "${mountdir}"
}

backup() {
  local auth_token=$1
  local segment_size=$2
  local target_uri=$3
  nice tar --create \
           --one-file-system \
	   --sparse \
	   -Ilz4 \
	   --directory "${mountdir}" \
	   --exclude-caches-under \
	   . |
	   segment_upload --auth-token "${auth_token}" \
	                  --segment-size "${segment_size}"B \
			  "${target_uri}"
}

[ "$#" -eq 3 ] || fail "auth_token segment_size target_uri"

checkpoint
snapshot
mount_snapshot
backup "$@"
trap '' SIGINT SIGQUIT SIGTERM
trap - ERR
cleanup
exit 0
